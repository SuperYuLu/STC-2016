// calField.cc
#include <cmath>
#include "const.h"
#include "traps.h"
#include <iostream>
double traps :: calField(double currI, double pos){
  /*
    Function to calculate magnetic field generated by anti-helmholtz 
    coil with given current currI and absolute positon pos;
    return field at a single position
    by Yu 2016/11/20
  */
  
  double field = 0;
  double u0 = 1.256637e-6; // Magnetic constant
  //field = u0 * currI * geoWindings * pow(geoR,2) * 0.5 * (1 / (pow(pow(pos - frontCoil,2) + pow(geoR,2),3/2)) - 1 / (pow(pow(pos - backCoil,2) + pow(geoR,2) ,3/2)));
  field += u0 * currI * geoWindings * pow(geoR,2) /2  / (pow((pow((pos - frontCoil), 2) + pow(geoR,2)),3/2));
  field -= u0 * currI * geoWindings * pow(geoR,2) /2  / (pow((pow((pos - backCoil), 2) + pow(geoR,2)),3/2));
  std::cout << "field: " << field << std::endl;
  return(field);
}
  
